(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{355:function(s,t,a){"use strict";a.r(t);var r=a(33),n=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),a("h2",{attrs:{id:"设备独立像素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设备独立像素"}},[s._v("#")]),s._v(" 设备独立像素")]),s._v(" "),a("p",[s._v("以 iPhone6/7/8为例，这里我们打开 Chrome 开发者工具：\n"),a("img",{attrs:{src:"/img/css_px.png",alt:""}}),s._v("\n这里的 375 * 667 表示的是什么呢，表示的是设备独立像素（DIP），也可以理解为 CSS 像素，也称为逻辑像素：\n设备独立像素 = CSS 像素 = 逻辑像素\n如何记忆呢？这里使用 CSS 像素来记忆，也就是说。我们设定一个宽度为 375px 的 div，刚好可以充满这个设备的一行，配合高度 667px ，则 div 的大小刚好可以充满整个屏幕")]),s._v(" "),a("h2",{attrs:{id:"物理像素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理像素"}},[s._v("#")]),s._v(" 物理像素")]),s._v(" "),a("p",[s._v("OK，那么，什么又是物理像素呢。我们到电商网站购买手机，都会看一看手机的参数，以 JD 上的 iPhone7 为例：\n"),a("img",{attrs:{src:"/img/css_wu_px.png",alt:""}}),s._v("\n可以看到，iPhone7 的分辨率是 1334 x 750，这里描述的就是屏幕实际的物理像素。\n物理像素，又称为设备像素。显示屏是由一个个物理像素点组成的，1334 x 750 表示手机分别在垂直和水平上所具有的像素点数。通过控制每个像素点的颜色，就可以使屏幕显示出不同的图像，屏幕从工厂出来那天起，它上面的物理像素点就固定不变了，单位为pt。\n设备像素 = 物理像素")]),s._v(" "),a("h2",{attrs:{id:"dpr（device-pixel-ratio）-设备像素比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dpr（device-pixel-ratio）-设备像素比"}},[s._v("#")]),s._v(" DPR（Device Pixel Ratio） 设备像素比")]),s._v(" "),a("p",[s._v("OK，有了上面两个概念，就可以顺理成章引出下一个概念。DPR（Device Pixel Ratio） 设备像素比，这个与我们通常说的视网膜屏（多倍屏，Retina屏）有关。\n设备像素比描述的是未缩放状态下，物理像素和设备独立像素的初始比例关系。\n简单的计算公式：\nDPR = 物理像素 / 设备独立像素\n我们套用一下上面 iPhone7 的数据（取设备的物理像素宽度与设备独立像素宽度进行计算）：\niPhone7’s DPR = iPhone7’s 物理像素宽度 / iPhone7's 设备独立像素宽度 = 2\n提示：750 / 375 = 2\n或者是 1334 / 667 = 2\n可以得到 iPhone7 的 dpr 为 2。也就是我们常说的视网膜屏幕。")]),s._v(" "),a("p",[s._v('视网膜（Retina）屏幕是苹果公司"发明"的一个营销术语。苹果公司将 dpr > 1 的屏幕称为视网膜屏幕。')]),s._v(" "),a("h2",{attrs:{id:"适配涵义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适配涵义"}},[s._v("#")]),s._v(" 适配涵义")]),s._v(" "),a("ul",[a("li",[s._v("适配不同屏幕大小，也就是适配不同屏幕下的 CSS 像素")]),s._v(" "),a("li",[s._v("适配不同像素密度，也就是适配不同屏幕下 dpr 不一致导致的一些问题")])]),s._v(" "),a("h3",{attrs:{id:"适配不同屏幕大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适配不同屏幕大小"}},[s._v("#")]),s._v(" 适配不同屏幕大小")]),s._v(" "),a("h4",{attrs:{id:"百分比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#百分比"}},[s._v("#")]),s._v(" 百分比")]),s._v(" "),a("p",[s._v("百分比值总要相对于另一个量，比如长度。每个允许使用百分比值的属性，同时也要定义百分比值参照的那个量。这个量可以是相同元素的另一个属性的值，也可以是祖先元素的某个属性的值，甚至是格式化上下文的一个度量（比如包含块的宽度）。\n具体来说：\n宽度（width）、间距（maring/padding）支持百分比值，但默认的相对参考值是包含块的宽度；")]),s._v(" "),a("p",[s._v("高度（height）百分比的大小是相对其父级元素高的大小；")]),s._v(" "),a("p",[s._v("边框（border）不支持百分值；")]),s._v(" "),a("p",[s._v("边框圆角半径（border-radius）支持百分比值，但水平方向相对参考值是盒子的宽度，垂直方向相对参考值是盒子的高度；")]),s._v(" "),a("p",[s._v("文本大小（font-size）支持百分比值，但相对参考值是父元素的font-size的值；")]),s._v(" "),a("p",[s._v("盒阴影（box-shadow）和文本阴影（text-shadow）不支持百分比值；")]),s._v(" "),a("p",[s._v("首先，支持百分比单位的度量属性有其各自的参照基准，其次并非所有度量属性都支持百分比单位。所以我们需要另辟蹊径。")]),s._v(" "),a("h4",{attrs:{id:"rem-适配方案-（flexible）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rem-适配方案-（flexible）"}},[s._v("#")]),s._v(" rem 适配方案 （flexible）")]),s._v(" "),a("p",[s._v("根据网页的根元素来设置字体大小，和 em（font size of the element）的区别是，em 是根据其父元素的字体大小来设置，而 rem 是根据网页的跟元素（html）来设置字体大小。")]),s._v(" "),a("p",[s._v("根据 document.documentElement.clientWidth 动态修改html的 font-size ，页面其他元素使用 rem 作为长度单位进行布局，从而实现页面的等比缩放  （flexible）")]),s._v(" "),a("h4",{attrs:{id:"vw-适配方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vw-适配方案"}},[s._v("#")]),s._v(" vw 适配方案")]),s._v(" "),a("p",[s._v("百分比适配方案的核心需要一个全局通用的基准单位，rem 是不错，但是需要借助 Javascript 进行动态修改根元素的 font-size，而 vw/vh（vmax/vmin） 的出现则很好弥补 rem 需要 JS 辅助的缺点。")]),s._v(" "),a("p",[s._v("vw等于初始包含块（html元素）宽度的1%，也就是：")]),s._v(" "),a("ul",[a("li",[s._v("1vw 等于 window.innerWidth 的数值的 1%")]),s._v(" "),a("li",[s._v("1vh 等于window.innerHeight 的数值的 1%"),a("br"),s._v(" "),a("img",{attrs:{src:"/img/browser_prop.png",alt:""}})])]),s._v(" "),a("h4",{attrs:{id:"自动转换插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动转换插件"}},[s._v("#")]),s._v(" 自动转换插件")]),s._v(" "),a("p",[s._v("当我们使用 rem 作为长度单位的时，通常会有借助 Sass/Less 实现一个转换函数，像是这样：")]),s._v(" "),a("div",{staticClass:"language-javaScript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设设计稿的宽度是 375px，假设取设计稿宽度下 1rem = 100px")]),s._v("\n$baseFontSize"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n@"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("px2rem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("$px")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    @"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" $px "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" $baseFontSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("同理，在 vw 方案下，我们只需要去改写这个方法：")]),s._v(" "),a("div",{staticClass:"language-javaScript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设设计稿的宽度是 375px")]),s._v("\n@"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("px2rem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("$px")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    @"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" $px "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("375")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("vw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("当然，我们还可以借助一些插件包去实现这个自动转换，提高效率，譬如 postcss-px-to-viewport")]),s._v(" "),a("h4",{attrs:{id:"_1px线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1px线"}},[s._v("#")]),s._v(" 1px线")]),s._v(" "),a("p",[s._v("不是根据设备的 dpr 动态改写 meta 标签，设置 viewport 的缩放来实现适配，在 Retina 屏下，无法很好的展示真正的 1px 物理像素线条。")]),s._v(" "),a("p",[s._v("设计师想要的 retina 下 border: 1px，其实是 1 物理像素宽，而不是 1 CSS 像素宽度，对于 CSS 而言：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("在 dpr = 1 时，此时 1 物理像素等于 1 CSS 像素宽度；")])]),s._v(" "),a("li",[a("p",[s._v("在 dpr = 2 时，此时 1 物理像素等于 0.5 CSS 宽度像素，可以认为 border-width: 1px 这里的 1px 其实是 1 CSS像素宽度，等于 2 像素物理宽度，设计师其实想要的是 border-width: 0.5px;")])]),s._v(" "),a("li",[a("p",[s._v("在 dpr = 3 时，此时 1 物理像素等于 0.33 CSS 宽度像素，设计师其实想要的是 border: 0.333px")])])]),s._v(" "),a("p",[s._v("然而，并不是所有手机浏览器都能识别 border-width: 0.5px，在 iOS7 以下，Android 等其他系统里，小于 1px 的单位会被当成为 0px 处理，那么如何实现这 0.5px、0.33px 呢？\n这里介绍几种方法：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("渐变实现")])]),s._v(" "),a("li",[a("p",[s._v("使用缩放实现")])]),s._v(" "),a("li",[a("p",[s._v("使用图片实现（base64）")])]),s._v(" "),a("li",[a("p",[s._v("使用SVG实现（嵌入 background url）")])])]),s._v(" "),a("p",[s._v("Retina 屏幕下 1px 线的实现。")]),s._v(" "),a("h2",{attrs:{id:"图片适配及优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片适配及优化"}},[s._v("#")]),s._v(" 图片适配及优化")]),s._v(" "),a("p",[s._v("图像通常占据了网页上下载资源绝的大部分。优化图像通常可以最大限度地减少从网站下载的字节数以及提高网站性能。\n通常可以，有一些通用的优化手段：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("消除多余的图像资源")])]),s._v(" "),a("li",[a("p",[s._v("尽可能利用 CSS3\\SVG 矢量图像替代某些光栅图像")])]),s._v(" "),a("li",[a("p",[s._v("谨慎使用字体图标，使用网页字体取代在图像中进行文本编码")])]),s._v(" "),a("li",[a("p",[s._v("选择正确的图片格式")])]),s._v(" "),a("li",[a("p",[s._v("为不同 DPR 屏幕提供最适合的图片尺寸")])])]),s._v(" "),a("h3",{attrs:{id:"无脑多倍图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无脑多倍图"}},[s._v("#")]),s._v(" 无脑多倍图")]),s._v(" "),a("p",[s._v("在移动端假设我们需要一张 CSS 像素为 300 x 200 的图像，考虑到现在已经有了 dpr = 3 的设备，那么要保证图片在 dpr = 3 的设备下也正常高清展示，我们最大可能需要一张 900 x 600 的原图。\n这样，不管设备的 dpr 是否为 3，我们统一都使用 3 倍图。这样即使在 dpr = 1，dpr = 2 的设备上，也能非常好的展示图片。\n当然这样并不可取，会造成大量带宽的浪费。现代浏览器，提供了更好的方式，让我们能够根据设备 dpr 的不同，提供不同尺寸的图片")]),s._v(" "),a("p",[a("strong",[s._v("srcset 配合 1x 2x 像素密度描述符")])]),s._v(" "),a("p",[s._v("简单来说，srcset 可以根据不同的 dpr 拉取对应尺寸的图片：")]),s._v(" "),a("div",{staticClass:"language-javaScript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("div "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'illustration'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("img src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'illustration-small.png'")]),s._v("\nsrcset"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("'images"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("illustration"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("small"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("png "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n               images"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("illustration"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("big"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("png "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("x'\nstyle"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'max-width: 500px'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("srcset 属性配合 sizes 属性 w 宽度描述符")])]),s._v(" "),a("p",[s._v("上面 1x，2x 的写法比较容易接受易于理解。\n除此之外，srcset属性还有一个 w 宽度描述符，配合 sizes 属性一起使用，可以覆盖更多的面。")]),s._v(" "),a("div",{staticClass:"language-javaScript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("img\nsizes "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("“")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("min"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),s._v("px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),s._v("px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v('px"\nsrc '),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"photo.png"')]),s._v("\nsrcset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" “photo@"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("png "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nphoto@"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("png "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),s._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nphoto@"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("png "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1200")]),s._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v('解析一下：\nsizes = “(min-width: 600px) 600px, 300px" 的意思是，如果屏幕当前的 CSS 像素宽度大于或者等于 600px，则图片的 CSS 宽度为 600px，反之，则图片的 CSS 宽度为 300px。\n也就是 sizes 属性声明了在不同宽度下图片的 CSS 宽度表现。这里可以理解为，大屏幕下图片宽度为 600px，小屏幕下图片宽度为 300px。（具体的媒体查询代码由 CSS 实现）\n这里的 sizes 属性只是声明了在不同宽度下图片的 CSS 宽度表现，而具体使图片在大于600px的屏幕上展示为600px宽度的代码需要另外由 CSS 或者 JS 实现，有点绕。\nsrcset = “photo@1x.png 300w, photo@2x.png 600w, photo@3x.png 1200w 里面的 300w，600w，900w 叫宽度描述符。怎么确定当前场景会选取哪张图片呢？')]),s._v(" "),a("ul",[a("li",[s._v("当前屏幕 dpr = 2 ，CSS 宽度为 375px。")])]),s._v(" "),a("p",[s._v("当前屏幕 CSS 宽度为 375px，则图片 CSS 宽度为 300px。分别用上述 3 个宽度描述符的数值除以 300。\n300 / 300 = 1")]),s._v(" "),a("p",[s._v("600 / 300 = 2")]),s._v(" "),a("p",[s._v("1200 / 300 = 4")]),s._v(" "),a("p",[s._v("上面计算得到的 1、 2、 4 即是算出的有效的像素密度，换算成和 x 描述符等价的值 。这里 600w 算出的 2 即满足 dpr = 2 的情况，选择此张图。")]),s._v(" "),a("ul",[a("li",[s._v("当前屏幕 dpr = 3 ，CSS 宽度为 414px。\n当前屏幕 CSS 宽度为 414px，则图片 CSS 宽度仍为 300px。再计算一次：\n300 / 300 = 1")])]),s._v(" "),a("p",[s._v("600 / 300 = 2")]),s._v(" "),a("p",[s._v("1200 / 300 = 4")]),s._v(" "),a("p",[s._v("因为 dpr = 3，2 已经不满足了，则此时会选择 1200w 这张图。")]),s._v(" "),a("ul",[a("li",[s._v("当前屏幕 dpr = 1 ，CSS 宽度为 1920px。\n当前屏幕 CSS 宽度为 1920px，则图片 CSS 宽度变为了 600px。再计算一次：\n300 / 600 = .5")])]),s._v(" "),a("p",[s._v("600 / 600 = 1")]),s._v(" "),a("p",[s._v("1200 / 600 = 2")]),s._v(" "),a("p",[s._v("因为 dpr = 1，所以此时会选择 600w 对应的图片。\n具体的可以试下这个 Demo：CodePen Demo -- srcset属性配合w宽度描述符配合sizes属性\n此方案的意义在于考虑到了响应性布局的复杂性与屏幕的多样性，利用上述规则，可以一次适配 PC 端大屏幕和移动端高清屏，一箭多雕")])])}),[],!1,null,null,null);t.default=n.exports}}]);